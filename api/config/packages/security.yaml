security:
    # Password hasher configuration
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Login firewall - DOIT être en premier
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                #check_path: /api/login
                #username_path: email
                #password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            
        # Registration endpoint - accessible sans token
        register:
            pattern: ^/api/register
            stateless: true
            security: false

        # API sécurisée avec JWT
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        # Dev routes
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Default/main
        main:
            lazy: true
            provider: app_user_provider

    access_control:
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
